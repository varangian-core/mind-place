generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  emailVerified DateTime?
  name          String?
  password      String?   @default("") // Will be hashed
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  user              User    @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Session {
  id        String   @id @default(cuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  snippets  Snippet[]
  createdAt DateTime @default(now())
}

model Topic {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  icon        String?   // Add this field for topic icons
  snippets    Snippet[]
  createdAt   DateTime  @default(now())
}

model Snippet {
  id        String   @id @default(cuid())
  name      String
  content   String
  tags      Tag[]
  topic     Topic?   @relation(fields: [topicId], references: [id])
  topicId   Int?
  createdAt DateTime @default(now())
}
